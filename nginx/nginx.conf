upstream rails_app {  
   server backend:3000;
} 
server {  
   listen 443 default_server;
   ssl on;
   ssl_certificate /etc/letsencrypt/live/api.tagmaru.me/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/api.tagmaru.me/privkey.pem;
   ssl_prefer_server_ciphers  on;
   ssl_ciphers                'ECDH !aNULL !eNULL !SSLv2 !SSLv3';
   add_header                 Strict-Transport-Security "max-age=31536000; includeSubdomains";
   # define your domain  
   server_name api.tagmaru.me; 
   # define the public application root  
   root   $RAILS_ROOT/public;  
   index  index.html;
   # define where Nginx should write its logs  
   access_log $RAILS_ROOT/log/nginx.access.log;  
   error_log $RAILS_ROOT/log/nginx.error.log;   
  
   # deny requests for files that should never be accessed  
   location ~ /\. {    
      deny all;  
   }
    
   location ^~ /.well-known/acme-challenge/ {
      root /var/www/tagmaru;
   }

   location ~* ^.+\.(rb|log)$ {    
      deny all;  
   }  
 
   # serve static (compiled) assets directly if they exist (for rails production)  

   location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
      try_files $uri @rails;     
      access_log off;    
      gzip_static on; 
      # to serve pre-gzipped version     
      expires max;    
      add_header Cache-Control public;     
      
      add_header Last-Modified "";    
      add_header ETag "";    
      break;  
   } 
  
   # send non-static file requests to the app server  
   location / {    
      try_files $uri @rails;  
   }   

   location @rails {    
      proxy_set_header  X-Real-IP  $remote_addr;    
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
      proxy_set_header Host $http_host;    
      proxy_redirect off;    
      proxy_pass http://rails_app;  
   }
}
